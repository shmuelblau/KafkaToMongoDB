version: '3.8'

services:

  Subscriber1:
    build: services/Subscriber
    container_name: Subscriber1
    restart: always
    ports:
      - "8001:8000"
    depends_on:
      - kafka
      - mongo

    environment:
      FLASK_ENV: 
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]


  Subscriber2:
    build: services/Subscriber
    container_name: Subscriber2
    restart: always
    ports:
      - "8002:8000"
    depends_on:
      - kafka
      - mongo

    environment:
      FLASK_ENV: development
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]



  Publisher:
    build: services/Publisher
    container_name: Publisher
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - mongo

    environment:
      FLASK_ENV: development
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]


  


  zookeeper:
    image: 'bitnami/zookeeper:3.8'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:3.7'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper


    mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: shmuel
      MONGO_INITDB_ROOT_PASSWORD: "1234"
      MONGO_INITDB_DATABASE: test
    volumes:
      - mongo-data:/data/db
     
    restart: unless-stopped

volumes:
  mongo-data:
